/* 
  Estilos de la Fuente

  font-family: familia de fuentes, la fuente que podemos aplicar
  font-size: el tamaño de fuente
  font-weight: indica el grosor de la tipografia,por ejemplo ponerlo en negrita ficticia 
  font-style: nos define el tipo de estilo(por ejemplo italica)
  font-variant: normal, small-caps(convertir todo el texto a mayuscula)
  line-height: es la altura de linea(es como el interlineado de word)
  font: es como el borde, lo pongo todo en una linea de codigo y asi seria el orden: font-style font-variant font-weight font-size line-height and font-family. Entre font-size y line.height hay que poner una diagonal
*/

.font {
  font-family: Georgia, "Times New Roman", Times, serif; /*si encuentra la tipografia georgia la aplica, sino utiliza la segunda, sino utiliza la tercera y asi sucesivamente*/
  font-family: sans-serif;
  font-size: 32px;
  font-weight: bold;
  font-style: italic;
  font-variant: small-caps;
  line-height: 2;
  font: italic small-caps bold 24px / 1.5 monospace;
}

/* 
Agregar tipografia externa: necesitamos tener los archivos fisicos de la tipografia(un archivo ttf) y para la web necesitamos el woff o woff 2(es un formato abierto de tipografia para la web, osea para que la web detecte la tipografia)
Formato woff o woff2 - Web Open Font Format

font-display: nos va decir como es que queremos cargar una fuente personalizada.Sus valores son:
  auto - permite que el navegador utilice el método predeterminado que suele ser block
  block - oculta brevemente el texto hasta que la fuente haya sido descargada por completo
  swap - indica al navegador que utilice la fuente alternativa para mostrar el texto hasta que la fuente personalizada se haya cargado por completo
  fallback - es una mezcla de auto y swap
  optional -ocultará el texto, luego lo cargará con la fuente alternativa y finalmente aplicará la fuente personalizada
*/

/*tenemos que utilizar la @ para crear nuestra regla de font face*/
@font-face {
  font-family: "Chalet";  /*definimos el nombre de nuestra tipografia*/
  src: url("../assets/Chalet.woff") format("woff");  /*en la url entre dobles comillas pongo la ruta que tendria que utilizar para llegar al archivo; adicionalmente del url tengo que decirle el formato del archivo que vamos a utilizar(en este caso seria woff)*/
  font-display: swap;
  /* si tenemos mas de un archivo tipografico lo podemos expresar asi
  src: url("../assets/Chalet.woff") format("woff"),
  url("../assets/Chalet.woff2") format("woff2"); */
  /*font-display:  swap - indica al navegador que utilice la fuente alternativa para mostrar el texto hasta que la fuente personalizada se haya cargado por completo, es el valor ideal para utilizar*/
}

/*a la clase chalet le agregamos ese tipo de fuente colocando el 
nombre que pusimos en el font face*/

.chalet {
  font-family: "Chalet", sans-serif; /*le pongo la tipografia y una segunda opcion por seguridad por si no encuentra chalet*/
  font-size: 2rem;
}

@font-face {
  font-family: "Pecita";
  src: url("../assets/Pecita.woff") format("woff");
  font-display: swap;
}

.pecita {
  font-family: "Pecita", cursive;
  font-size: 2rem;
}

/*hay dos formas de utilizar google font: la primera es mandarlo 
a llamar con un @import desde la hoja de estilos, la segunda es desde la hoja de estilo con dos links.Tambien nos da la opcion de descargar la tipografia */
/*ES RECOMENDABLE UTILIZAR UNA SOLA FUENTE, MAXIMO TRES*/
/*Cargo la tipografia de google con el link(es mas facil y recomendable), los links que me da google cuando selecciono la tipografia los copio en el head, en este caso para utilizar raleway de google me dio los siguientes links:
<link rel="preconnect" href="https://fonts.googleapis.com">
  <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
  <link href="https://fonts.googleapis.com/css2?family=Raleway:wght@400;700&display=swap" rel="stylesheet">*/

/*para aplicar la fuente de google, pongo el nombre que me sale 
en google abajo de los links*/
.raleway {
  font-family: "Raleway", sans-serif;
  font-size: 2rem;
}

/* 
-text-align: donde quiero alinear el texto, el valor por defecto es left(alineado a la izquierda), tambien podemos tenerlo a la derecha, justificado, o centrado
-text-decoration: tenemos varios valores, por ejemplo el underline es el que pone como subrayado, es la que tiene como predeterminado los enlaces. Por ejemplo en los enlaces, le podemos quitar esa caracteristica, colocando -text-decoration:none. El valor overline pone una linea sobre el elemento
-text-indent: es para darle una sangria
-text-overflow: el clip hace que por ejemplo tengo un texto y se corta, el valor ellipsis hace que en vez de cortarse ponga puntos suspensivos.
Para que este text-overflow funcione hay que tener la propiedad de overflow en hidden y adicionalmente una propiedad que se llama white-space con el valor de nowrap(white nos dice que hacemos con los espacios en blanco)
  overflow: hidden;
  white-space: nowrap;
-text-transform: nos va servir para transformar el texto. Su posibles valores son capitalize que convierte la primera letra de cada palabra en mayúscula; otro valor es uppercase que convierte todas las letras en mayúsculas y por ultimo tenemos lowercase que convierte todas las letras en minúsculas. Su valor por defecto es none, que no hace ninguna transformacion.
-letter-spacing: es el espaciado que va tener cada letra, cada caracter
-white-space: es la que nos dice que hacer con los espacios en blanco. Los valores son los siguientes +nowrap: las secuencias de espacios se combinan en uno.Los saltos de línea se ignoran.
El contenido del texto no se ajusta y permanece en una sola línea. +pre: El espacio en blanco se conserva exactamente . Se conservan secuencias de espacios. Las líneas se rompen solo en líneas nuevas y<br>. +pre-wrap; El espacio en blanco se conserva en su mayor parte . Se conservan secuencias de espacios. Las líneas se rompen en líneas nuevas <br>, pero también al llegar al final del elemento. +pre-line; Solo se conservan las líneas nuevas. Las secuencias de espacios se combinan en uno. Las líneas se rompen en líneas nuevas <br>, pero también al llegar al final del elemento
-word-break: Define cómo deben dividirse las palabras al llegar al final de una línea.El valor por defecto es normal.El otro valor es break-all y este valor hace que las palabras sin espacio se rompan tan pronto como lleguen al final de una linea. En resumen es cuando se rompe la palabra, osea cuando el una palabra no le alcanza se tiene que ir para abajo, o se rompe(o sea esta la palabra y abajo le sigue la palabra)
-word-spacing: define el espacio que va ir entre cada palabra
-writing-mode: modo de escritura, el valor por defecto es horizontal-tb. Vertical lr: siginifica modo vertical y que vaya de  izquierda aderecha . Tambien esta el vertical rl
*/
.text {
  font-size: 2rem;
  text-align: center;
  text-align: left;
  text-decoration: overline;
  text-decoration: none;
  text-indent: 3rem;
  text-transform: capitalize;
  text-transform: lowercase;
  text-transform: uppercase;
  text-transform: none;
  letter-spacing: 0.5rem;
  word-break: break-all;
  writing-mode: vertical-rl;
  writing-mode: vertical-lr;
  writing-mode: horizontal-tb;
}

.text a {
  text-decoration: none;
}

.text-overflow {
  background-color: blanchedalmond;
  border: thin solid black;
  padding: 1rem;
  width: 50%;
  font-size: 2rem;
  overflow: hidden;
  white-space: nowrap;
  text-overflow: ellipsis;
}

.white-space {
  white-space: pre;
}

.word-spacing {
  font-size: 2rem;
  word-spacing: 1rem;
}

/* material icons:google 
Primero hay que copiar el link <link href="https://fonts.googleapis.com/icon?family=Material+Icons" rel="stylesheet"> en el head, en el cuerpo de HTML.
Luego en el cuerpo de css, copiar lo siguiente.
Luego copiar en el body de HTML dentro de span el nombre del icono con la clase material icons(todo se saca de google icons)
*/
.material-icons {
  font-family: "Material Icons";
  font-weight: normal;
  font-style: normal;
  font-size: 24px; /* Preferred icon size */
  display: inline-block;
  line-height: 1;
  text-transform: none;
  letter-spacing: normal;
  word-wrap: normal;
  white-space: nowrap;
  direction: ltr;

  /* Support for all WebKit browsers. */
  -webkit-font-smoothing: antialiased;
  /* Support for Safari and Chrome. */
  text-rendering: optimizeLegibility;

  /* Support for Firefox. */
  -moz-osx-font-smoothing: grayscale;

  /* Support for IE. */
  font-feature-settings: "liga";
}

/* Bootstrap: tenemos que copiar el link en el head de HTML  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.5.0/font/bootstrap-icons.css">
Luego copiar de bootstrap icons la etiqueta i que corresponde a cada icono*/

/* FonstAwesome: tenemos que copiar el link en el head de HTML
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/css/all.min.css">
  Luego debemos copiar de fontawesome icons la etiqueta i que corresponde a cada icono */